

/**
 * @author NAJIM
 */
import scala.io.StdIn;

object MyProgram {
  def main(args: Array[String]):Unit ={
    /*
    println("scala rocks again!");
    val t=("najim",27)
    val (name,age) = t;
    var ageX=scala.io.StdIn.readInt();
    //for (ln <- io.Source.stdin.getLines) println(ln)
    println(name,t._1,ageX);
    val myName = concat("Najim","Ahmed");
    println("My name is "+myName);
    var isPalindrome = RecursionTest("ababa",0,4);
    println(isPalindrome);
    */
    /*Testing Object Literals*/
    ObjectLiterals();
    
  }
  def concat(string1: String,string2:String):String= {
    string1+" " +string2;
  }
  def RecursionTest(inputString:String,leftIdx:Int,rightIdx:Int):Boolean = {
    if(leftIdx>=rightIdx)true;
    else {
      RecursionTest(inputString,leftIdx+1,rightIdx-1);
    }
  }
  
  def ObjectLiterals(): Unit = {
    val f1 = (x:Double)=>x*x;
    val f2 = (x:Double)=>x+3;
    def compose(function1:Double=>Double,function2:Double=>Double)=>(Double=>Double) = {
      (x:Double)=>f(g(x));
    }
  }
  
}  